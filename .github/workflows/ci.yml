name: CI (Full Stack with Database)

# Temporarily disabled - use ci-simple.yml instead
# To enable: remove the 'workflow_dispatch' and uncomment the push/pull_request triggers
on:
  workflow_dispatch:
  # push:
  #   branches: [ main, dev ]
  # pull_request:
  #   branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: saas_chat
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Setup environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/saas_chat" >> $GITHUB_ENV
          echo "REDIS_URL=redis://localhost:6379" >> $GITHUB_ENV
          echo "NODE_ENV=test" >> $GITHUB_ENV
          echo "FRONTEND_ORIGIN=http://localhost:5173" >> $GITHUB_ENV
          echo "PORT=3001" >> $GITHUB_ENV
      
      - name: Generate Prisma Client
        run: |
          cd apps/backend
          npx prisma generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/saas_chat
      
      - name: Run Prisma Migrations
        run: |
          cd apps/backend
          npx prisma migrate deploy --skip-seed
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/saas_chat
      
      - name: Lint Backend
        run: pnpm --filter @saas-chat/backend lint
        continue-on-error: true
      
      - name: Lint Frontend
        run: pnpm --filter @saas-chat/frontend lint
        continue-on-error: true
      
      - name: Build Backend
        run: pnpm --filter @saas-chat/backend build
      
      - name: Build Frontend
        run: pnpm --filter @saas-chat/frontend build
      
      - name: Run Backend Tests
        run: pnpm --filter @saas-chat/backend test
        continue-on-error: true
      
      - name: Check Build Artifacts
        run: |
          echo "Backend build:"
          ls -la apps/backend/dist/ || echo "No backend dist folder"
          echo "Frontend build:"
          ls -la apps/frontend/dist/ || echo "No frontend dist folder"
